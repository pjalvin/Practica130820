
import 'dart:async';
import 'dart:ui';
import 'package:firebase_database/firebase_database.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/painting.dart';
import 'package:flutter/rendering.dart';
import 'package:juegoexamen/Niveles.dart';
import 'package:juegoexamen/Tutorial.dart';
import 'package:juegoexamen/provider.dart';
import 'package:provider/provider.dart';

import 'Modelos/Partida.dart';
import 'Niveles/Creador.dart';
import 'Niveles/Invitado.dart';
import 'librerias/Transiciones.dart';
import 'main.dart';

class HomePage extends StatefulWidget {

  @override
  _HomePageState createState() => _HomePageState();
}
class _HomePageState extends State<HomePage>{
  var myProvider;
  final Ref = FirebaseDatabase.instance.reference();
  TextEditingController llavei = TextEditingController();
  bool dialog=false;
  int cont=0;
  List<String> personajes = [
    'assets/Personaje/personajes.png',
    'assets/Personaje/personajesdos.png',


  ];
  int idx=0;
  Future imagenes(t)async{
    Completer c = Completer();
    Timer(Duration(milliseconds: t), (){
      c.complete(imagenRecorrido(t) );
    });
  }
  imagenRecorrido(t) {
    setState(() {
      idx=(idx+1)%2;
      imagenes(t);
    });
  }
  @override
  void initState() {
    // TODO: implement initState
    imagenes(100);
  }


        @override
  Widget build(BuildContext context) {
    myProvider=Provider.of<MyProvider>(context);
    contar();
    myProvider.codigo=cont;
    // TODO: implement build
    return Scaffold(
      //appBar: AppBar(title: Text("Bienvenido"), backgroundColor: Color.fromRGBO(118, 74, 162, 1),),
      backgroundColor: Color.fromRGBO(57, 46, 100, 1),
      body: Container(
      decoration: BoxDecoration(
      image: DecorationImage(
      image: AssetImage("assets/images/home.png"),
      fit: BoxFit.cover)),
      child: ListView(
        //: Alignment.center,
        children: <Widget>[
          Back(-0.90,-0.90, Icons.arrow_back_ios),
          Column(
            mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Container(
                  color: Color.fromRGBO(143,
                      205, 255, 0.5),
                  child: Text("Bienvenido ${myProvider.msg}",
                      style: TextStyle(fontSize: 50,
                        fontWeight: FontWeight.normal,
                        fontFamily: 'Arial',
                        color: Color.fromRGBO(34, 52, 67, 1)
                      )
                  ),
                ),
                Image(image: AssetImage(personajes[idx]),width: MediaQuery.of(context).size.width*2/3),
                //buildSapce(0.05, 0.0),
                //buildButton("Tutorial", Colors.orangeAccent),
                buildSapce(0.02, 0.0),
                buildButton("Tutorial", Color.fromRGBO(228, 76, 83, 1)),
                buildSapce(0.02, 0.0),
                buildButton("Jugar", Color.fromRGBO(38, 129, 114, 1)),
                buildSapce(0.02, 0.0),
                /*buildButton("Crear partida", Color.fromRGBO(43, 65, 83, 1)),
                buildSapce(0.02, 0.0),
                Container(
                  alignment: Alignment.center,
                  height: MediaQuery.of(context).size.height * 0.08,
                  width: MediaQuery.of(context).size.width*0.5,
                  child:   TextField(
                    cursorColor: Colors.white,
                    style: TextStyle(fontSize: 20,
                        fontWeight: FontWeight.normal,
                        fontFamily: 'Arial',
                        color: Colors.white
                    ),

                    controller: llavei,
                    //style: TextStyle(fontSize: 15),
                    decoration: InputDecoration(hintText: 'Ingrese Codigo', hintStyle: TextStyle(
                        color: Colors.white
                    )),
                    keyboardType: TextInputType.text,
                  ),

                ),
                buildSapce(0.02, 0.0),
                buildButton("Entrar partida", Color.fromRGBO(25, 71, 109, 1)),
                */
                Container(
                     width: MediaQuery.of(context).size.width*1/3,
                      height:MediaQuery.of(context).size.width*0.05,
                      alignment: Alignment.center,
                      child: LinearProgressIndicator(

                        backgroundColor: Colors.indigo,
                        valueColor: AlwaysStoppedAnimation<Color>(Colors.blueAccent),

          )
      )

    ],

          )
        ],
      ),
    )
    );
  }
  Widget buildSapce(h,w) {

    return Container(
      height: MediaQuery.of(context).size.height * h,
      width: MediaQuery.of(context).size.width*w,
    );
  }
    Widget buildButton(String buttonText, Color buttonColor) {
    return Align(
      alignment: Alignment.center,
      child: Container(
      height: MediaQuery.of(context).size.height * 0.08,
      width: MediaQuery.of(context).size.width*0.5,
      //color: buttonColor,
      decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: buttonColor,

         // gradient: RadialGradient(colors: [buttonColor])
      ),
      child: FlatButton(
        shape: RoundedRectangleBorder(

          borderRadius: BorderRadius.circular(10.0),
          side: BorderSide(
          color: Colors.white,
          width: 3,
          style: BorderStyle.solid

        ),
        ),
        padding: EdgeInsets.all(4.0),
        onPressed: () => buttonPressed(buttonText),
        child: Text(
          buttonText,
          style: TextStyle(
              fontSize: 30.0,
              fontWeight: FontWeight.normal,
              color: Colors.white
          ),
        ),
      ),
      ),
    );
  }

  buttonPressed(opc) {
    switch (opc){
      case "Tutorial":
        Navigator.push(context,SizeRoute(page:Tutorial()));
        break;
      case "Jugar":
        Navigator.push(context,SizeRoute(page: Niveles()  ));
        break;
      case "Crear partida":
        crearPartida();
        myProvider.codigo=cont;
        showDialog(context: context,
          builder: (_)=>AlertDialog(
            title: Text('Crear Partida'),
            content:  Text('Partida creada  Codigo: ${cont.toString()}'),
            actions: <Widget>[
              FlatButton(
                  child: Text('Ok'),
                  onPressed: () {
                    Navigator.pop(context);
                    Navigator.push(context,SizeRoute(page: Creador()  ));
                  }
              )],

          ),
          barrierDismissible: false,
        );
        break;
      case "Entrar partida":
        myProvider.codigo=int.parse(llavei.text.toString());
        print("La llave es ${llavei.text.toString()}");
        getKey();
        showDialog(context: context,
          builder: (_)=>AlertDialog(
            title: Text('Entrar Partida'),
            actions: <Widget>[

              FlatButton(
                  child: Text('Ok'),
                  onPressed: () {

                    //myProvider.codigo=2;
                    Navigator.push(context,SizeRoute(page: Invitado()  ));
                  }
              )],

          ),
          barrierDismissible: false,
        );
        break;
    }
  }

  Widget Back(x,y,icono){
    return Align(
        alignment: Alignment(x,y),
        child: Container(
            height: MediaQuery.of(context).size.width*1/15,
            width: MediaQuery.of(context).size.width*1/15,
            child: IconButton(
                icon: Icon(icono),
                color: Colors.white,
                onPressed: (){

                  //setState(() {
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>Puente()));

                 // });
                })

        )
    );
  }
  crearPartida() {
    contar();
    print(cont.toString());
    cont=cont+1;
    var data={
      "Usuarioc": 'Ocupado',
      "Usuarioi": 'Vacio',
      "ScoreC":  0,
      "ScoreI": 0,
      "Xc": -2.05,
      "Yc": -2.05,
      "Dc": 0.0,
      "Vc": 100,
      "Xi": -2.1,
      "Yi": -2.1,
      "Di": 0.0,
      "Vi": 100,
      "Llave": cont,
    };
    Ref.child('Partida').push().set(data).then((_) {
      print('Exito');
      print(cont);
    //  myProvider.kep=valor.;
      }).catchError((error) {
        setState(() {
          print('$error');
        });

      });
    getKey();
  }
  contar() {
    int aux=0;
    Ref.child('Partida').once().then((DataSnapshot snap) {
      var  keys=snap.value.keys;
      var data = snap.value;
      for(var i in keys){
        aux++;
      }
      cont=aux;
      //print(aux.toString());
    });
  }
  getKey() {

    Ref.child('Partida').once().then((DataSnapshot snap) {
      var  keys=snap.value.keys;
      var data = snap.value;
      for(var i in keys){
        if(data[i]['Llave']==cont)
        {
          myProvider.keyp=i;
          //aux=i.toString();
          //print(aux);
        }
      }
      });
  }
}

